--  This project file was generated by the Ada_Drivers_Library project wizard script
library project MicroBit_ZFP is

   type BUILD_TYPE is ("Debug", "Production");
   Build : BUILD_Type := external ("ADL_BUILD", "Debug");

   --  Target architecture
   Target := Project'Target;

   --  Callgraph info is not available on all architectures
   Callgraph_Switch := ();
   case Target is
      when "riscv32-unknown-elf" =>
         null;
      when others =>
         Callgraph_Switch := ("-fcallgraph-info=su");
   end case;

   package Compiler is
      case Build is
         when "Production" =>
            for Default_Switches ("Ada") use
              ("-g", "-O3", "-gnatp", "-gnatn");
         when "Debug" =>
            for Default_Switches ("Ada") use
              ("-g", "-O0", "-gnata") & Callgraph_Switch;
      end case;
      for Default_Switches ("ada") use Compiler'Default_Switches ("Ada") &
        ("-gnatwa", "-gnatwe", "-gnatQ", "-gnatw.X", "-gnaty", "-gnatyO",
         "-gnatyM120", "-ffunction-sections", "-fdata-sections");
   end Compiler;

   for Languages use ("Ada");
   for Create_Missing_Dirs use "True";
   for Object_Dir use "obj/zfp_" & Build;
   for Library_Dir use "obj/zfp_lib_" & Build;
   for Library_Kind use "static";
   for Library_Name use "ada_drivers_library";
   for Target use "arm-eabi";
   for Runtime ("Ada") use "zfp-microbit";

   Vendor                         := "Nordic";            -- From board definition
   Max_Mount_Points               := "2";                 -- From default value
   Max_Mount_Name_Length          := "128";               -- From default value
   Runtime_Profile                := "zfp";               -- From command line
   Device_Name                    := "nRF51822xxAA";      -- From board definition
   Device_Family                  := "nRF51";             -- From board definition
   Runtime_Name                   := "zfp-microbit";      -- From default value
   Has_Ravenscar_Full_Runtime     := "False";             -- From board definition
   CPU_Core                       := "ARM Cortex-M0";     -- From mcu definition
   Board                          := "MicroBit";          -- From command line
   Has_ZFP_Runtime                := "True";              -- From board definition
   Has_Ravenscar_SFP_Runtime      := "False";             -- From board definition
   Max_Path_Length                := "1024";              -- From default value
   Runtime_Name_Suffix            := "microbit";          -- From board definition
   Architecture                   := "ARM";               -- From board definition

   --  Project source directories
   Src_Dirs_Root := "../..";
   for Source_Dirs use (
    Src_Dirs_Root & "/hal/src/", -- From HAL config
    Src_Dirs_Root & "/boards/MicroBit/src/", -- From board definition
    Src_Dirs_Root & "/arch/ARM/cortex_m/src", -- From arch definition
    Src_Dirs_Root & "/arch/ARM/cortex_m/src/cm0", -- From arch definition
    Src_Dirs_Root & "/arch/ARM/cortex_m/src/nocache", -- From arch definition
    Src_Dirs_Root & "/arch/ARM/cortex_m/src/nvic_cm0", -- From arch definition
    Src_Dirs_Root & "/arch/ARM/Nordic/devices/", -- From MCU definition
    Src_Dirs_Root & "/arch/ARM/Nordic/drivers/", -- From MCU definition
    Src_Dirs_Root & "/arch/ARM/Nordic/svd/nrf51/", -- From MCU definition
    Src_Dirs_Root & "/middleware/src/filesystem", -- From middleware config
    Src_Dirs_Root & "/middleware/src/BLE", -- From middleware config
    Src_Dirs_Root & "/middleware/src/utils", -- From middleware config
    Src_Dirs_Root & "/middleware/src/audio", -- From middleware config
    Src_Dirs_Root & "/middleware/src/monitor", -- From middleware config
    Src_Dirs_Root & "/middleware/src/bitmap", -- From middleware config
    Src_Dirs_Root & "/middleware/src/command_line", -- From middleware config
    Src_Dirs_Root & "/middleware/src/sdmmc", -- From middleware config
    Src_Dirs_Root & "/components/src/**", -- From components config
     "src/zfp/");
end MicroBit_ZFP;
